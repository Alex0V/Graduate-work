// <auto-generated />
using System;
using Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(MeditDBContext))]
    [Migration("20240624133713_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Relax"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Focus"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Stress Relief"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Anxiety"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Mindfulness"
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Self-Awareness"
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Spiritual"
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Compassion"
                        },
                        new
                        {
                            Id = 9,
                            CategoryName = "Breathwork"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Meditation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FotoKey")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("S3UrlFoto")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Meditations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 132, DateTimeKind.Local).AddTicks(3114),
                            Description = "Focuses on being present in the moment and non-judgmentally observing your thoughts and surroundings.",
                            Duration = "10-30 minutes",
                            FotoKey = "mindfulness-meditation.jpg",
                            Name = "Mindfulness Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/mindfulness-meditation.jpg"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6452),
                            Description = "Uses a mantra to help quiet the mind and achieve a deep state of relaxation.",
                            Duration = "10-30 minutes",
                            FotoKey = "transcendental-meditation.jpg",
                            Name = "Transcendental Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/transcendental-meditation.jpg"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6476),
                            Description = "Involves generating feelings of love and compassion towards oneself and others.",
                            Duration = "10-30 minutes",
                            FotoKey = "loving-kindness-meditation.jpg",
                            Name = "Loving-Kindness Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/loving-kindness-meditation.jpg"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6480),
                            Description = "Involves systematically bringing attention to different parts of the body, noticing sensations and relaxing tension.",
                            Duration = "10-30 minutes",
                            FotoKey = "body-scan-meditation.jpg",
                            Name = "Body Scan Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/body-scan-meditation.jpg"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6482),
                            Description = "Involves observing the breath and bodily sensations to gain insight into the nature of reality.",
                            Duration = "30-60 minutes",
                            FotoKey = "vipassana-meditation.jpg",
                            Name = "Vipassana Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/vipassana-meditation.jpg"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6489),
                            Description = "Involves sitting in silence and focusing on the breath, often with the support of a teacher or group.",
                            Duration = "20-40 minutes",
                            FotoKey = "zen-meditation.jpg",
                            Name = "Zen Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/zen-meditation.jpg"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6491),
                            Description = "Involves focusing on each of the body's energy centers to balance and align them.",
                            Duration = "10-30 minutes",
                            FotoKey = "chakra-meditation.jpg",
                            Name = "Chakra Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/chakra-meditation.jpg"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6493),
                            Description = "Involves repeating a word or phrase to focus the mind and achieve a calm state.",
                            Duration = "10-30 minutes",
                            FotoKey = "mantra-meditation.jpg",
                            Name = "Mantra Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/mantra-meditation.jpg"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6495),
                            Description = "Involves counting each breath to maintain focus and concentration.",
                            Duration = "10-30 minutes",
                            FotoKey = "breath-counting-meditation.jpg",
                            Name = "Breath Counting Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/breath-counting-meditation.jpg"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6498),
                            Description = "Involves walking slowly and mindfully, focusing on each step and the sensations in the body.",
                            Duration = "10-30 minutes",
                            FotoKey = "walking-meditation.jpg",
                            Name = "Walking Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/walking-meditation.jpg"
                        },
                        new
                        {
                            Id = 11,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6501),
                            Description = "Involves creating a mental image or scenario to promote relaxation and positive emotions.",
                            Duration = "10-30 minutes",
                            FotoKey = "visualization-meditation.jpg",
                            Name = "Visualization Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 12,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6503),
                            Description = "Involves lying down and systematically relaxing different parts of the body to achieve a deep state of relaxation.",
                            Duration = "20-40 minutes",
                            FotoKey = "yoga-nidra-meditation.jpg",
                            Name = "Yoga Nidra Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/yoga-nidra-meditation.jpg"
                        },
                        new
                        {
                            Id = 13,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6505),
                            Description = "Involves focusing on a particular sound or a series of sounds to promote relaxation.",
                            Duration = "10-30 minutes",
                            FotoKey = "sound-meditation.jpg",
                            Name = "Sound Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/sound-meditation.jpg"
                        },
                        new
                        {
                            Id = 14,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6507),
                            Description = "Involves combining movement, breath, and visualization to improve physical and mental health.",
                            Duration = "10-30 minutes",
                            FotoKey = "qi-gong-meditation.jpg",
                            Name = "Qi Gong Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/qi-gong-meditation.jpg"
                        },
                        new
                        {
                            Id = 15,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6510),
                            Description = "Involves combining breathwork, movement, and mantra to awaken the energy at the base of the spine and raise it up through the chakras.",
                            Duration = "10-30 minutes",
                            FotoKey = "kundalini-meditation.jpg",
                            Name = "Kundalini Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/kundalini-meditation.jpg"
                        },
                        new
                        {
                            Id = 16,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6512),
                            Description = "Involves sitting in silence and observing the mind without judgment.",
                            Duration = "10-60 minutes",
                            FotoKey = "silent-meditation.jpeg",
                            Name = "Silent Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/silent-meditation.jpeg"
                        },
                        new
                        {
                            Id = 17,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6514),
                            Description = "Involves focusing on a specific object or sound to maintain concentration and develop awareness.",
                            Duration = "10-30 minutes",
                            FotoKey = "open-monitoring-meditation.jpg",
                            Name = "Open Monitoring Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/open-monitoring-meditation.jpg"
                        },
                        new
                        {
                            Id = 18,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6516),
                            Description = "Involves focusing on a specific object or sound to maintain concentration and develop awareness.",
                            Duration = "10-30 minutes",
                            FotoKey = "focused-attention-meditation.jpg",
                            Name = "Focused Attention Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/focused-attention-meditation.jpg"
                        },
                        new
                        {
                            Id = 19,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6518),
                            Description = "Involves cultivating feelings of loving-kindness and compassion towards oneself and others.",
                            Duration = "10-30 minutes",
                            FotoKey = "metta-meditation.jpg",
                            Name = "Metta Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/metta-meditation.jpg"
                        },
                        new
                        {
                            Id = 20,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6520),
                            Description = "Involves focusing on the sensations in the body to develop awareness and relaxation.",
                            Duration = "10-30 minutes",
                            FotoKey = "body-awareness-meditation.jpg",
                            Name = "Body Awareness Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/body-awareness-meditation.jpg"
                        },
                        new
                        {
                            Id = 21,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6522),
                            Description = "Involves cultivating feelings of empathy and compassion towards oneself and others.",
                            Duration = "10-30 minutes",
                            FotoKey = "",
                            Name = "Compassion Meditation",
                            S3UrlFoto = ""
                        },
                        new
                        {
                            Id = 22,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6524),
                            Description = "Involves listening to the sound of a singing bowl to promote relaxation and focus.",
                            Duration = "10-30 minutes",
                            FotoKey = "",
                            Name = "Singing Bowl Meditation",
                            S3UrlFoto = ""
                        },
                        new
                        {
                            Id = 23,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6526),
                            Description = "Involves tensing and relaxing different muscle groups to promote relaxation and reduce tension.",
                            Duration = "10-30 minutes",
                            FotoKey = "",
                            Name = "Progressive Muscle Relaxation",
                            S3UrlFoto = ""
                        },
                        new
                        {
                            Id = 24,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6528),
                            Description = "Involves following the instructions of a teacher or audio recording to promote relaxation and awareness.",
                            Duration = "10-30 minutes",
                            FotoKey = "",
                            Name = "Guided Meditation",
                            S3UrlFoto = ""
                        },
                        new
                        {
                            Id = 25,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6530),
                            Description = "Involves eating slowly and mindfully, focusing on the taste, texture, and sensations of the food.",
                            Duration = "10-30 minutes",
                            FotoKey = "",
                            Name = "Mindful Eating Meditation",
                            S3UrlFoto = ""
                        },
                        new
                        {
                            Id = 26,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6532),
                            Description = "Involves focusing on the breath to promote relaxation and develop awareness.",
                            Duration = "10-30 minutes",
                            FotoKey = "",
                            Name = "Mindful Breathing Meditation",
                            S3UrlFoto = ""
                        },
                        new
                        {
                            Id = 27,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6534),
                            Description = "Involves cultivating feelings of compassion and empathy towards oneself and others.",
                            Duration = "",
                            FotoKey = "",
                            Name = "Compassionate Mind Meditation",
                            S3UrlFoto = ""
                        },
                        new
                        {
                            Id = 28,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6536),
                            Description = "Involves connecting with a higher power or spiritual practice to promote relaxation and inner peace.",
                            Duration = "10-30 minutes",
                            FotoKey = "",
                            Name = "Spiritual Meditation",
                            S3UrlFoto = ""
                        },
                        new
                        {
                            Id = 29,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6538),
                            Description = "Involves repeating a sound or phrase to promote relaxation and focus.",
                            Duration = "10-30 minutes",
                            FotoKey = "",
                            Name = "Chanting Meditation",
                            S3UrlFoto = ""
                        },
                        new
                        {
                            Id = 30,
                            CreationDate = new DateTime(2024, 6, 24, 16, 37, 13, 135, DateTimeKind.Local).AddTicks(6540),
                            Description = "Involves focusing on the area between the eyebrows to promote relaxation and develop intuition.",
                            Duration = "10-30 minutes",
                            FotoKey = "",
                            Name = "Third Eye Meditation",
                            S3UrlFoto = ""
                        });
                });

            modelBuilder.Entity("Domain.Entities.MeditationCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("MeditationId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "MeditationId");

                    b.HasIndex("MeditationId");

                    b.ToTable("MeditationCategories");

                    b.HasData(
                        new
                        {
                            CategoryId = 5,
                            MeditationId = 1
                        },
                        new
                        {
                            CategoryId = 6,
                            MeditationId = 1
                        },
                        new
                        {
                            CategoryId = 1,
                            MeditationId = 2
                        },
                        new
                        {
                            CategoryId = 8,
                            MeditationId = 3
                        },
                        new
                        {
                            CategoryId = 1,
                            MeditationId = 4
                        },
                        new
                        {
                            CategoryId = 3,
                            MeditationId = 4
                        },
                        new
                        {
                            CategoryId = 6,
                            MeditationId = 4
                        },
                        new
                        {
                            CategoryId = 5,
                            MeditationId = 5
                        },
                        new
                        {
                            CategoryId = 6,
                            MeditationId = 5
                        },
                        new
                        {
                            CategoryId = 2,
                            MeditationId = 6
                        },
                        new
                        {
                            CategoryId = 2,
                            MeditationId = 7
                        },
                        new
                        {
                            CategoryId = 9,
                            MeditationId = 7
                        },
                        new
                        {
                            CategoryId = 1,
                            MeditationId = 8
                        },
                        new
                        {
                            CategoryId = 2,
                            MeditationId = 8
                        },
                        new
                        {
                            CategoryId = 2,
                            MeditationId = 9
                        },
                        new
                        {
                            CategoryId = 5,
                            MeditationId = 10
                        },
                        new
                        {
                            CategoryId = 1,
                            MeditationId = 11
                        },
                        new
                        {
                            CategoryId = 2,
                            MeditationId = 11
                        },
                        new
                        {
                            CategoryId = 1,
                            MeditationId = 12
                        },
                        new
                        {
                            CategoryId = 3,
                            MeditationId = 12
                        },
                        new
                        {
                            CategoryId = 1,
                            MeditationId = 13
                        },
                        new
                        {
                            CategoryId = 9,
                            MeditationId = 14
                        },
                        new
                        {
                            CategoryId = 9,
                            MeditationId = 15
                        },
                        new
                        {
                            CategoryId = 7,
                            MeditationId = 15
                        },
                        new
                        {
                            CategoryId = 2,
                            MeditationId = 16
                        },
                        new
                        {
                            CategoryId = 5,
                            MeditationId = 17
                        },
                        new
                        {
                            CategoryId = 2,
                            MeditationId = 18
                        },
                        new
                        {
                            CategoryId = 8,
                            MeditationId = 19
                        },
                        new
                        {
                            CategoryId = 6,
                            MeditationId = 20
                        },
                        new
                        {
                            CategoryId = 8,
                            MeditationId = 21
                        },
                        new
                        {
                            CategoryId = 1,
                            MeditationId = 22
                        },
                        new
                        {
                            CategoryId = 2,
                            MeditationId = 22
                        },
                        new
                        {
                            CategoryId = 1,
                            MeditationId = 23
                        },
                        new
                        {
                            CategoryId = 3,
                            MeditationId = 23
                        },
                        new
                        {
                            CategoryId = 1,
                            MeditationId = 24
                        },
                        new
                        {
                            CategoryId = 3,
                            MeditationId = 24
                        },
                        new
                        {
                            CategoryId = 6,
                            MeditationId = 24
                        },
                        new
                        {
                            CategoryId = 5,
                            MeditationId = 25
                        },
                        new
                        {
                            CategoryId = 4,
                            MeditationId = 26
                        },
                        new
                        {
                            CategoryId = 5,
                            MeditationId = 26
                        },
                        new
                        {
                            CategoryId = 9,
                            MeditationId = 26
                        },
                        new
                        {
                            CategoryId = 8,
                            MeditationId = 27
                        },
                        new
                        {
                            CategoryId = 7,
                            MeditationId = 28
                        },
                        new
                        {
                            CategoryId = 1,
                            MeditationId = 29
                        },
                        new
                        {
                            CategoryId = 2,
                            MeditationId = 29
                        },
                        new
                        {
                            CategoryId = 2,
                            MeditationId = 30
                        },
                        new
                        {
                            CategoryId = 7,
                            MeditationId = 30
                        });
                });

            modelBuilder.Entity("Domain.Entities.MeditationProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FotoKey")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("MeditationId")
                        .HasColumnType("int");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("S3UrlFoto")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("MeditationId");

                    b.ToTable("MeditationPrograms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FotoKey = "metta-meditation.jpg",
                            MeditationId = 1,
                            ProgramName = "Dreamy Breeze",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/metta-meditation.jpg"
                        },
                        new
                        {
                            Id = 2,
                            FotoKey = "6cd7496c-b1f0-4906-8df9-4ba5c93ba21e.png",
                            MeditationId = 1,
                            ProgramName = "Peace of the Lake",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/6cd7496c-b1f0-4906-8df9-4ba5c93ba21e.png"
                        },
                        new
                        {
                            Id = 3,
                            FotoKey = "zen-meditation.jpg",
                            MeditationId = 2,
                            ProgramName = "Silent Symphony",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/zen-meditation.jpg"
                        },
                        new
                        {
                            Id = 4,
                            FotoKey = "mantra-meditation.jpg",
                            MeditationId = 2,
                            ProgramName = "Calm Waters",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/mantra-meditation.jpg"
                        },
                        new
                        {
                            Id = 5,
                            FotoKey = "walking-meditation.jpg",
                            MeditationId = 3,
                            ProgramName = "Deep Equilibrium",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/walking-meditation.jpg"
                        },
                        new
                        {
                            Id = 6,
                            FotoKey = "yoga-nidra-meditation.jpg",
                            MeditationId = 3,
                            ProgramName = "Transcendental Tranquility",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/yoga-nidra-meditation.jpg"
                        },
                        new
                        {
                            Id = 7,
                            FotoKey = "kundalini-meditation.jpg",
                            MeditationId = 4,
                            ProgramName = "Path to Inner Peace",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/kundalini-meditation.jpg"
                        },
                        new
                        {
                            Id = 8,
                            FotoKey = "open-monitoring-meditation.jpg",
                            MeditationId = 4,
                            ProgramName = "Conscious Immersion",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/open-monitoring-meditation.jpg"
                        },
                        new
                        {
                            Id = 9,
                            FotoKey = "metta-meditation.jpg",
                            MeditationId = 5,
                            ProgramName = "Kindness Unfolding Practice",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/metta-meditation.jpg"
                        },
                        new
                        {
                            Id = 10,
                            FotoKey = "body-awareness-meditation.jpg",
                            MeditationId = 5,
                            ProgramName = "Radiant Love Meditation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/body-awareness-meditation.jpg"
                        },
                        new
                        {
                            Id = 11,
                            FotoKey = "focused-attention-meditation.jpg",
                            MeditationId = 6,
                            ProgramName = "Meditation of Compassionate Hearts",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/focused-attention-meditation.jpg"
                        },
                        new
                        {
                            Id = 12,
                            FotoKey = "silent-meditation.jpeg",
                            MeditationId = 6,
                            ProgramName = "Mindful Body Unveiling",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/silent-meditation.jpeg"
                        },
                        new
                        {
                            Id = 13,
                            FotoKey = "qi-gong-meditation.jpg",
                            MeditationId = 7,
                            ProgramName = "Somatic Awareness Practice",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/qi-gong-meditation.jpg"
                        },
                        new
                        {
                            Id = 14,
                            FotoKey = "sound-meditation.jpg",
                            MeditationId = 7,
                            ProgramName = "Sensory Body Exploration",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/sound-meditation.jpg"
                        },
                        new
                        {
                            Id = 15,
                            FotoKey = "visualization-meditation.jpg",
                            MeditationId = 8,
                            ProgramName = "Insightful Mindfulness Practice",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 16,
                            FotoKey = "visualization-meditation.jpg",
                            MeditationId = 8,
                            ProgramName = "Quiet Stream",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 17,
                            FotoKey = "visualization-meditation.jpg",
                            MeditationId = 9,
                            ProgramName = "Breath count",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 18,
                            FotoKey = "visualization-meditation.jpg",
                            MeditationId = 9,
                            ProgramName = "Breathing harmony",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 19,
                            FotoKey = "visualization-meditation.jpg",
                            MeditationId = 10,
                            ProgramName = "The way to peace",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 20,
                            FotoKey = "visualization-meditation.jpg",
                            MeditationId = 10,
                            ProgramName = "Calm step",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 21,
                            FotoKey = "visualization-meditation.jpg",
                            MeditationId = 11,
                            ProgramName = "Visualization of dreams",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 22,
                            FotoKey = "visualization-meditation.jpg",
                            MeditationId = 12,
                            ProgramName = "Conscious immersion",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 23,
                            FotoKey = "visualization-meditation.jpg",
                            MeditationId = 13,
                            ProgramName = "Perception of sounds",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 24,
                            FotoKey = "visualization-meditation.jpg",
                            MeditationId = 14,
                            ProgramName = "Harmony of energy",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 25,
                            FotoKey = "visualization-meditation.jpg",
                            MeditationId = 15,
                            ProgramName = "Internal recovery",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 26,
                            FotoKey = "visualization-meditation.jpg",
                            MeditationId = 16,
                            ProgramName = "Perception of silence",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 27,
                            FotoKey = "visualization-meditation.jpg",
                            MeditationId = 17,
                            ProgramName = "Open observation",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 28,
                            FotoKey = "visualization-meditation.jpg",
                            MeditationId = 18,
                            ProgramName = "Internal focus",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 29,
                            FotoKey = "visualization-meditation.jpg",
                            MeditationId = 19,
                            ProgramName = "The perception of love",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        },
                        new
                        {
                            Id = 30,
                            FotoKey = "visualization-meditation.jpg",
                            MeditationId = 20,
                            ProgramName = "Dive into inner space",
                            S3UrlFoto = "https://medi-coursework.s3.eu-west-2.amazonaws.com/visualization-meditation.jpg"
                        });
                });

            modelBuilder.Entity("Domain.Entities.MeditationSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AuditionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProgramContentId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramContentId");

                    b.HasIndex("UserId");

                    b.ToTable("MeditationSessions");
                });

            modelBuilder.Entity("Domain.Entities.Music", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AudioKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S3UrlAudio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Musics");
                });

            modelBuilder.Entity("Domain.Entities.ProgramContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AudioKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MeditationProgramId")
                        .HasColumnType("int");

                    b.Property<string>("S3UrlAudio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MeditationProgramId");

                    b.ToTable("ProgramContents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AudioKey = "Dreamy Breeze.mp3",
                            ContentName = "Day 1",
                            Duration = "10:35",
                            MeditationProgramId = 1,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Dreamy+Breeze.mp3"
                        },
                        new
                        {
                            Id = 2,
                            AudioKey = "Peace of the Lake.mp3",
                            ContentName = "Day 2",
                            Duration = "10:30",
                            MeditationProgramId = 1,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Peace+of+the+Lake.mp3"
                        },
                        new
                        {
                            Id = 3,
                            AudioKey = "Silent Symphony.mp3",
                            ContentName = "Day 3",
                            Duration = "10:01",
                            MeditationProgramId = 1,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Silent+Symphony.mp3"
                        },
                        new
                        {
                            Id = 4,
                            AudioKey = "Calm Waters.mp3",
                            ContentName = "Day 4",
                            Duration = "20:32",
                            MeditationProgramId = 1,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Calm+Waters.mp3"
                        },
                        new
                        {
                            Id = 5,
                            AudioKey = "Deep Equilibrium.mp3",
                            ContentName = "Day 5",
                            Duration = "13:00",
                            MeditationProgramId = 1,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Deep+Equilibrium.mp3"
                        },
                        new
                        {
                            Id = 6,
                            AudioKey = "Transcendental Tranquility.mp3",
                            ContentName = "Day 1",
                            Duration = "20:26",
                            MeditationProgramId = 2,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Transcendental+Tranquility.mp3"
                        },
                        new
                        {
                            Id = 7,
                            AudioKey = "Path to Inner Peace.mp3",
                            ContentName = "Day 2",
                            Duration = "10:21",
                            MeditationProgramId = 2,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Path+to+Inner+Peace.mp3"
                        },
                        new
                        {
                            Id = 8,
                            AudioKey = "Conscious Immersion.mp3",
                            ContentName = "Day 3",
                            Duration = "26:31",
                            MeditationProgramId = 2,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Conscious+Immersion.mp3"
                        },
                        new
                        {
                            Id = 9,
                            AudioKey = "Kindness Unfolding Practice.mp3",
                            ContentName = "Day 1",
                            Duration = "22:38",
                            MeditationProgramId = 3,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Kindness+Unfolding+Practice.mp3"
                        },
                        new
                        {
                            Id = 10,
                            AudioKey = "Radiant Love Meditation.mp3",
                            ContentName = "Day 2",
                            Duration = "10:10",
                            MeditationProgramId = 3,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Radiant+Love+Meditation.mp3"
                        },
                        new
                        {
                            Id = 11,
                            AudioKey = "Meditation of Compassionate Hearts.mp3",
                            ContentName = "Day 3",
                            Duration = "10:07",
                            MeditationProgramId = 3,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Meditation+of+Compassionate+Hearts.mp3"
                        },
                        new
                        {
                            Id = 12,
                            AudioKey = "Mindful Body Unveiling.mp3",
                            ContentName = "Day 1",
                            Duration = "21:26",
                            MeditationProgramId = 4,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Mindful+Body+Unveiling.mp3"
                        },
                        new
                        {
                            Id = 13,
                            AudioKey = "Somatic Awareness Practice.mp3",
                            ContentName = "Day 2",
                            Duration = "11:38",
                            MeditationProgramId = 4,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Somatic+Awareness+Practice.mp3"
                        },
                        new
                        {
                            Id = 14,
                            AudioKey = "Sensory Body Exploration.mp3",
                            ContentName = "Day 3",
                            Duration = "10:00",
                            MeditationProgramId = 4,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Sensory+Body+Exploration.mp3"
                        },
                        new
                        {
                            Id = 15,
                            AudioKey = "Insightful Mindfulness Practice.mp3",
                            ContentName = "Day 1",
                            Duration = "30:02",
                            MeditationProgramId = 5,
                            S3UrlAudio = "https://medi-coursework.s3.eu-west-2.amazonaws.com/Insightful+Mindfulness+Practice.mp3"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MeditationProgramId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MeditationProgramId");

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MeditationProgramId = 5,
                            Score = 5,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ResetPasswordExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alex21@example.com",
                            FirstName = "Alex",
                            LastName = "Verenchuk",
                            Password = "0+KfAo47rbIvnDWoGTjUTK0PczQ+v/Il9HBF4pDvjTNv6Adi",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "Admin",
                            UserName = "alex21"
                        },
                        new
                        {
                            Id = 2,
                            Email = "asmith@example.com",
                            FirstName = "Alice",
                            LastName = "Smith",
                            Password = "3aU0kBylMEB2BKDGSx9E09QRYNE2y60YZ4woVNrWhfdfjPKf",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "asmith"
                        },
                        new
                        {
                            Id = 3,
                            Email = "bobj@example.com",
                            FirstName = "Bob",
                            LastName = "Johnson",
                            Password = "ct2emvN2Ks58RxMaQDUj4QC7w7Kh6huaaEp/gObk+CoIh+1l",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "bobj"
                        },
                        new
                        {
                            Id = 4,
                            Email = "emilyb@example.com",
                            FirstName = "Emily",
                            LastName = "Brown",
                            Password = "LU3UCSpYJ7fx0hhq4HtYJ8ske/gaUmSVqv7gBqgBEZfTlJpA",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "emilyb"
                        },
                        new
                        {
                            Id = 5,
                            Email = "michaelw@example.com",
                            FirstName = "Michael",
                            LastName = "Wilson",
                            Password = "FOlRhfjF9e0IRxZe40MBsI6V32WqVkdMp9rWJoQD/4nf8egi",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "michaelw"
                        },
                        new
                        {
                            Id = 6,
                            Email = "sophiag@example.com",
                            FirstName = "Sophia",
                            LastName = "Garcia",
                            Password = "WK7sb2dakxpUeCRRcRMqCipxpPxCaDldk4H0ZHGuyRqROfoc",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "sophiag"
                        },
                        new
                        {
                            Id = 7,
                            Email = "davidm@example.com",
                            FirstName = "David",
                            LastName = "Martinez",
                            Password = "NlRyHgfOjJPF56pcFXFBQ4+sfIVMLmuFl+9VNP3ysHJR4ZHp",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "davidm"
                        },
                        new
                        {
                            Id = 8,
                            Email = "olivial@example.com",
                            FirstName = "Olivia",
                            LastName = "Lopez",
                            Password = "4p8UZX9oQyrigvghVYosaczLpgy5Es5/JkvpgWVOAljziu9Q",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "olivial"
                        },
                        new
                        {
                            Id = 9,
                            Email = "jamesh@example.com",
                            FirstName = "James",
                            LastName = "Hernandez",
                            Password = "CajzHtrS59LWeJJHM2JUs2AbDpfjSFbfwaDp4uedk9UUGdon",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "jamesh"
                        },
                        new
                        {
                            Id = 10,
                            Email = "emmag@example.com",
                            FirstName = "Emma",
                            LastName = "Gonzalez",
                            Password = "iJSGXivQ7o7AVPUavXsCQWeg3yIiaYJNd/NxsdK75lBk3hUF",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "emmag"
                        },
                        new
                        {
                            Id = 11,
                            Email = "olga22@example.com",
                            FirstName = "Olga",
                            LastName = "Petrenko",
                            Password = "1kq9v9SnhEYxgwNUlkqq4+S1gKseUJo/Z1T5PQJffKQMkdDn",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "olga22"
                        },
                        new
                        {
                            Id = 12,
                            Email = "olga12@example.com",
                            FirstName = "Olga",
                            LastName = "Ivanova",
                            Password = "N/3vxoQhfhl+kBqW9XYRUewRzGMq5SBxAh1ANQrl8uIuK921",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "olga12"
                        },
                        new
                        {
                            Id = 13,
                            Email = "ivan23@example.com",
                            FirstName = "Ivan",
                            LastName = "Ivanov",
                            Password = "hYIpoEKeL7ag0b8NiInteE43SnISO9o1XbKsHFhcuvvnL5CL",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "ivan23"
                        },
                        new
                        {
                            Id = 14,
                            Email = "maria24@example.com",
                            FirstName = "Maria",
                            LastName = "Shevchenko",
                            Password = "dOKFmiNsxG41sRYn9ePe/itSSfr/2snVhstJeTugQEKdAC1/",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "maria24"
                        },
                        new
                        {
                            Id = 15,
                            Email = "petro25@example.com",
                            FirstName = "Petro",
                            LastName = "Kovalenko",
                            Password = "Vy8cQRLcXDueWCKOah8Wd3jfgUi3xe4d+DSLCG8e+/9aElnT",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "petro25"
                        },
                        new
                        {
                            Id = 16,
                            Email = "natalia26@example.com",
                            FirstName = "Natalia",
                            LastName = "Skrypka",
                            Password = "N9VZWYUycuRMcvqu0hkckp6IZF36tMqUCqF9KnC0BYcqzv+g",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "natalia26"
                        },
                        new
                        {
                            Id = 17,
                            Email = "sergiy27@example.com",
                            FirstName = "Sergiy",
                            LastName = "Bondarenko",
                            Password = "IX5FXtVeD3J7LNF7QCHoUiwrrwPgmGlcqD5+7pj8LCmuJ/8L",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "sergiy27"
                        },
                        new
                        {
                            Id = 18,
                            Email = "yulia28@example.com",
                            FirstName = "Yulia",
                            LastName = "Hrytsenko",
                            Password = "+oO/p/XccBK44OUN6Bv6bK62N5KOK6UaWtrEPBCI4nmUsNW8",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "yulia28"
                        },
                        new
                        {
                            Id = 19,
                            Email = "andriy29@example.com",
                            FirstName = "Andriy",
                            LastName = "Tkachuk",
                            Password = "PfOPv0yH6t5fm//tWrFEy0rGRnpnurwz5xWWP1VUeKNmCxOa",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "andriy29"
                        },
                        new
                        {
                            Id = 20,
                            Email = "larysa30@example.com",
                            FirstName = "Larysa",
                            LastName = "Didenko",
                            Password = "61tjBLPcGZrpR7V+kkjBd80y1ZjGGhv7ZB9fHb9yGDlixCsi",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "larysa30"
                        },
                        new
                        {
                            Id = 21,
                            Email = "anna31@example.com",
                            FirstName = "Anna",
                            LastName = "Kravchenko",
                            Password = "KVR5Vhmu7auHgwcGf7aSu398tWEzVNMuUIpzthkdInbjFKq7",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "anna31"
                        },
                        new
                        {
                            Id = 22,
                            Email = "viktor32@example.com",
                            FirstName = "Viktor",
                            LastName = "Sydorenko",
                            Password = "JyCvyugdJxQlIB7JcO3S7PInsJmb+qVDdV30KLFl+9FjjQYM",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "viktor32"
                        },
                        new
                        {
                            Id = 23,
                            Email = "daria33@example.com",
                            FirstName = "Daria",
                            LastName = "Moroz",
                            Password = "IrV3iCDW84iG7XumaxvKdOjdtiGFhoY5EYlk8wtrQXxf1Xid",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "daria33"
                        },
                        new
                        {
                            Id = 24,
                            Email = "bohdan34@example.com",
                            FirstName = "Bohdan",
                            LastName = "Rudenko",
                            Password = "30Y+mdftDYz1EYQJ1poCvMPneXdhlLGu8aF8sKuHBckHdiAz",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "bohdan34"
                        },
                        new
                        {
                            Id = 25,
                            Email = "halyna35@example.com",
                            FirstName = "Halyna",
                            LastName = "Zinchenko",
                            Password = "MgRfwNJKJAHjjgLMlz5jRfjS99GGHUb2Xg3GMReJYuYueh9r",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "halyna35"
                        },
                        new
                        {
                            Id = 26,
                            Email = "roman36@example.com",
                            FirstName = "Roman",
                            LastName = "Melnyk",
                            Password = "qPz8aFN7tYNsW0UahMrf8VrIVI5bNff1+FLVUJBFSoXS2FYI",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "roman36"
                        },
                        new
                        {
                            Id = 27,
                            Email = "tetiana37@example.com",
                            FirstName = "Tetiana",
                            LastName = "Tkachenko",
                            Password = "GhIJrxbRxMtfHdtznmbGTlrUjCu2kc8het+kozVvBTJ/lqmb",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "tetiana37"
                        },
                        new
                        {
                            Id = 28,
                            Email = "yaroslav38@example.com",
                            FirstName = "Yaroslav",
                            LastName = "Marchenko",
                            Password = "J5FhEk5jC6vFSOdXnlaYqnTGpLoBaWczjENK7wa7OeGP5rHI",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "yaroslav38"
                        },
                        new
                        {
                            Id = 29,
                            Email = "mykola39@example.com",
                            FirstName = "Mykola",
                            LastName = "Horodetsky",
                            Password = "jyetpp8JFeLtvvfV8j6pP4mWmBRe1ktwZee5SmByskABp/Nn",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "mykola39"
                        },
                        new
                        {
                            Id = 30,
                            Email = "valeria40@example.com",
                            FirstName = "Valeria",
                            LastName = "Litvin",
                            Password = "gAO/n2et8TdOSDpQI+D0h+hlHSr6dQZz5K4HqMLwmw6aRAZz",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "valeria40"
                        },
                        new
                        {
                            Id = 31,
                            Email = "oksana41@example.com",
                            FirstName = "Oksana",
                            LastName = "Poltava",
                            Password = "AjHIGZugI8xqfEWK3v9f9IATSF8gD+ZpiauMM35IqTQ91rZd",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "oksana41"
                        },
                        new
                        {
                            Id = 32,
                            Email = "vladyslav42@example.com",
                            FirstName = "Vladyslav",
                            LastName = "Bondar",
                            Password = "FLqUTo7fgBv6z+yHvBcxzLi3BaLur6JD3IXVOx4pL1idXZzt",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "vladyslav42"
                        },
                        new
                        {
                            Id = 33,
                            Email = "svitlana43@example.com",
                            FirstName = "Svitlana",
                            LastName = "Lysenko",
                            Password = "6968QQo+ZQ941drDwcNRcZIqidGNdT3Gso7uQ4FLY542or6i",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "svitlana43"
                        },
                        new
                        {
                            Id = 34,
                            Email = "artem44@example.com",
                            FirstName = "Artem",
                            LastName = "Levchenko",
                            Password = "UrOB1MkcszaT9bqKV1QyqxBx3Fe/99EdWOJLPvTOJovZv6Yi",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "artem44"
                        },
                        new
                        {
                            Id = 35,
                            Email = "iryna45@example.com",
                            FirstName = "Iryna",
                            LastName = "Sokolova",
                            Password = "AERnOIPei8yZRB1YrtiXjrbEI2kFcvWAjrNxcmnmJebMvZU2",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "iryna45"
                        },
                        new
                        {
                            Id = 36,
                            Email = "denys46@example.com",
                            FirstName = "Denys",
                            LastName = "Chernysh",
                            Password = "V5lKKejUQr6AV54QZoN1fYIgg712QGBTpbCRFuRUfF4+D1WF",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "denys46"
                        },
                        new
                        {
                            Id = 37,
                            Email = "vasyl47@example.com",
                            FirstName = "Vasyl",
                            LastName = "Hryhorovych",
                            Password = "aEwG/lmgOJ4ZRb5lqwfhca6j+137sr8ixqC4rYBN2cGHNiuL",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "vasyl47"
                        },
                        new
                        {
                            Id = 38,
                            Email = "hanna48@example.com",
                            FirstName = "Hanna",
                            LastName = "Semenivna",
                            Password = "+dQoSoc9ChDVf722PX7VAS0AAK/i9x2wIvzsEXLn9XftSQiF",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "hanna48"
                        },
                        new
                        {
                            Id = 39,
                            Email = "viktor49@example.com",
                            FirstName = "Viktor",
                            LastName = "Mykhailovych",
                            Password = "Y5txd2I3cFHpD0nfMQMI7mQ6sidiSeDs5uYTUrrs8UPLi+l2",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "viktor49"
                        },
                        new
                        {
                            Id = 40,
                            Email = "maryna50@example.com",
                            FirstName = "Maryna",
                            LastName = "Oleksandrivna",
                            Password = "LG8AW3lNn+4/C6U4HzU2qEKkeB9ReS08LlsSK3+Wu5+VyxDa",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ResetPasswordExpiry = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Role = "User",
                            UserName = "maryna50"
                        });
                });

            modelBuilder.Entity("Domain.Entities.MeditationCategory", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("MeditationCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Meditation", "Meditation")
                        .WithMany("MeditationCategories")
                        .HasForeignKey("MeditationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Meditation");
                });

            modelBuilder.Entity("Domain.Entities.MeditationProgram", b =>
                {
                    b.HasOne("Domain.Entities.Meditation", "Meditation")
                        .WithMany("MeditationPrograms")
                        .HasForeignKey("MeditationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meditation");
                });

            modelBuilder.Entity("Domain.Entities.MeditationSession", b =>
                {
                    b.HasOne("Domain.Entities.ProgramContent", "ProgramContent")
                        .WithMany("MeditationSessions")
                        .HasForeignKey("ProgramContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("MeditationSessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramContent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Music", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Musics")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.ProgramContent", b =>
                {
                    b.HasOne("Domain.Entities.MeditationProgram", "MeditationProgram")
                        .WithMany("ProgramContents")
                        .HasForeignKey("MeditationProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeditationProgram");
                });

            modelBuilder.Entity("Domain.Entities.Rating", b =>
                {
                    b.HasOne("Domain.Entities.MeditationProgram", "MeditationProgram")
                        .WithMany("Ratings")
                        .HasForeignKey("MeditationProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeditationProgram");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("MeditationCategories");
                });

            modelBuilder.Entity("Domain.Entities.Meditation", b =>
                {
                    b.Navigation("MeditationCategories");

                    b.Navigation("MeditationPrograms");
                });

            modelBuilder.Entity("Domain.Entities.MeditationProgram", b =>
                {
                    b.Navigation("ProgramContents");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("Domain.Entities.ProgramContent", b =>
                {
                    b.Navigation("MeditationSessions");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("MeditationSessions");

                    b.Navigation("Musics");

                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
